name: Build and Deploy to EB

on:
  push:
    branches:
      - main  # Ejecutar el pipeline cuando se hace push a la rama principal
  
env:
  AWS_REGION: 'us-east-1'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ECR_REPO_NAME: 'ticketgo'
  AWS_ECR_REPO_LINK: '970547369787.dkr.ecr.us-east-1.amazonaws.com/ticketgo'
  AWS_ECR_REPO_PATH: '970547369787.dkr.ecr.us-east-1.amazonaws.com'
  AWS_EB_ENVIRONMENT: 'ticketgo-api-env'
  AWS_EB_APPLICATION: 'ticketgo-api'
  IMAGE_NAME: 'ticketgo-app'
  AWS_ACCOUNT_ID: '9705-4736-9787'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'


      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run all tests
        run: ./gradlew testClasses      

            

  deploy-ecr:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
            name: Package
            path: build/libs
       
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      - name: Configure login
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push Docker image to ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{env.AWS_ECR_REPO_PATH}}
          docker build -t ${{env.AWS_ECR_REPO_NAME}} .
          docker tag ${{env.AWS_ECR_REPO_NAME}}:latest ${{env.AWS_ECR_REPO_LINK}}:latest
          docker push ${{env.AWS_ECR_REPO_LINK}}:latest
          
  deploy-eb:
    needs: deploy-ecr
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Deploy to EB
        id: deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.AWS_EB_APPLICATION }}
          environment_name: ${{ env.AWS_EB_ENVIRONMENT }}
          version_label: 'ticketgo-api'
          region: ${{ env.AWS_REGION }}
          use_existing_version_if_available: true
